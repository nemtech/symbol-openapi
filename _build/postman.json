{
    "item": [
        {
            "id": "98254bbc-00f3-43e3-a7b4-21d21e51975d",
            "name": "account",
            "item": [
                {
                    "id": "fbfa67b8-34d2-4125-a1de-823322f7f391",
                    "name": "Get accounts information",
                    "request": {
                        "name": "Get accounts information",
                        "description": {
                            "content": "Returns the account information for an array of accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "53664e53-e503-41ae-aa1d-8ab9e1cfd642",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"linkedAccountKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"<integer>\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": \"<integer>\"\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"<integer>\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": \"<integer>\"\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n },\n {\n  \"account\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"addressHeight\": 1,\n   \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"publicKeyHeight\": 1,\n   \"accountType\": \"<integer>\",\n   \"linkedAccountKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"activityBuckets\": [\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"<integer>\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": \"<integer>\"\n    },\n    {\n     \"startHeight\": 1,\n     \"totalFeesPaid\": \"<integer>\",\n     \"beneficiaryCount\": \"<integer>\",\n     \"rawScore\": \"<integer>\"\n    }\n   ],\n   \"mosaics\": [\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    },\n    {\n     \"id\": \"0DC67FBE1CAD29E3\",\n     \"amount\": \"123456\"\n    }\n   ],\n   \"importance\": 0,\n   \"importanceHeight\": 1\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "78dda398-55da-4710-83ce-0c58d6dad80a",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7722b2b5-12c7-4735-a352-4dde862844f7",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "62070319-bf99-4bdf-8015-2c58464dc2ec",
                    "name": "{account Id}",
                    "item": [
                        {
                            "id": "b0987116-9dca-4dfc-8604-f7864814c739",
                            "name": "Get account information",
                            "request": {
                                "name": "Get account information",
                                "description": {
                                    "content": "Returns the account information.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "da962f40-a865-4f47-8541-1641011aec9a",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"account\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"addressHeight\": 1,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"publicKeyHeight\": 1,\n  \"accountType\": \"<integer>\",\n  \"linkedAccountKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"activityBuckets\": [\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"<integer>\",\n    \"beneficiaryCount\": \"<integer>\",\n    \"rawScore\": \"<integer>\"\n   },\n   {\n    \"startHeight\": 1,\n    \"totalFeesPaid\": \"<integer>\",\n    \"beneficiaryCount\": \"<integer>\",\n    \"rawScore\": \"<integer>\"\n   }\n  ],\n  \"mosaics\": [\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   },\n   {\n    \"id\": \"0DC67FBE1CAD29E3\",\n    \"amount\": \"123456\"\n   }\n  ],\n  \"importance\": 0,\n  \"importanceHeight\": 1\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "ce90f821-e632-4f04-ac66-3b3b430af0b1",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "89980117-91e3-4934-a6ff-21908e1bc26d",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "7e4e5f6b-446a-47a4-8377-91b13ae3efad",
                            "name": "transactions",
                            "item": [
                                {
                                    "id": "7b43f9bf-292a-4e0f-b871-a07f8ab07ed2",
                                    "name": "Get confirmed transactions",
                                    "request": {
                                        "name": "Get confirmed transactions",
                                        "description": {
                                            "content": "Gets an array of transactions for which an account is the sender or receiver.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "65d7cf1d-d9d1-446b-9b3f-684bc016f624",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7ca7d024-7ecf-42de-af33-0a7885710f97",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "55867201-38cc-4c3a-a8d5-7c142368c4ce",
                                    "name": "Get incoming transactions",
                                    "request": {
                                        "name": "Get incoming transactions",
                                        "description": {
                                            "content": "Gets an array of incoming transactions. A transaction is said to be incoming with respect to an account\nif the account is the recipient of the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "incoming"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "468e1323-e56d-4d17-8d4d-c69efaac2ac6",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "incoming"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "21b1a5cb-7804-4088-b02a-39195ea425e1",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "incoming"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "2466c0ff-7eed-4ad5-afd1-747970d6c3d7",
                                    "name": "Get outgoing transactions",
                                    "request": {
                                        "name": "Get outgoing transactions",
                                        "description": {
                                            "content": "Gets an array of outgoing transactions. A transaction is said to be outgoing with respect to an account\nif the account is the sender of the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "outgoing"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "60328fa3-79af-4f5b-97d3-aad42b8ffda6",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "outgoing"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c3129c16-cba1-407e-a7bd-bd6a947a655e",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "outgoing"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "43c1f4a3-9da3-468d-b2d3-cedd90771a6f",
                                    "name": "Get unconfirmed transactions",
                                    "request": {
                                        "name": "Get unconfirmed transactions",
                                        "description": {
                                            "content": "Gets the array of transactions not included in a block where an account is the sender or receiver.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "unconfirmed"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "7a4926b5-342d-4151-afb6-d69d1a943f79",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "unconfirmed"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "72ccf37e-927c-434f-984c-bd7f6de6aaa6",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "unconfirmed"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "5a619b03-1d6a-4adc-a1b7-2e83fbfe638f",
                                    "name": "Get aggregate bonded transactions information",
                                    "request": {
                                        "name": "Get aggregate bonded transactions information",
                                        "description": {
                                            "content": "Gets an array of aggregate bonded transactions where the account is the sender, recipient, or requires to cosign the transaction.\n",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "transactions",
                                                "partial"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "description": "Number of entries to return.",
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                                    "key": "ordering",
                                                    "value": "-id"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                },
                                                {
                                                    "description": "Transaction type to filter by.\nTo filter by multiple transaction types, add more filter query params like: ``type=16974&type=16718``.\n",
                                                    "key": "type",
                                                    "value": "<integer>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "ef65b23a-83cf-449b-a696-d1d3028f50c6",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "partial"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "05376b76-0d41-4f6c-90fb-b3a8efa70b64",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "transactions",
                                                        "partial"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [
                                                        {
                                                            "key": "pageSize",
                                                            "value": "10"
                                                        },
                                                        {
                                                            "key": "id",
                                                            "value": "<string>"
                                                        },
                                                        {
                                                            "key": "ordering",
                                                            "value": "-id"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        },
                                                        {
                                                            "key": "type",
                                                            "value": "<integer>"
                                                        }
                                                    ],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "4f624a8c-8f8e-48b9-bb5d-ff1caf15648b",
                            "name": "Get mosaics created by an account",
                            "request": {
                                "name": "Get mosaics created by an account",
                                "description": {
                                    "content": "Gets an array of mosaics created for a given account address.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "4de70ec0-439e-41d7-be47-4d3a5cbcd2fd",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"mosaics\": [\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  },\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "efbed36e-b957-4f95-ba75-0c094886317c",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "d98eabcf-54a1-4af5-b0ef-c1dccfd57466",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "mosaics"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "335b52fc-435e-45e0-99f0-b6634cdef0ce",
                            "name": "multisig",
                            "item": [
                                {
                                    "id": "a7465e68-9900-4d97-904e-dcf579728e20",
                                    "name": "Get multisig account information",
                                    "request": {
                                        "name": "Get multisig account information",
                                        "description": {
                                            "content": "Returns the multisig account information.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "multisig"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "4c4cc365-d224-4f0e-9015-132461d06b33",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"multisig\": {\n  \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"minApproval\": 2,\n  \"minRemoval\": 1,\n  \"cosignatoryPublicKeys\": [\n   \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n  ],\n  \"multisigPublicKeys\": [\n   \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "104ddd32-fb38-495e-94f4-04bd083b079f",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5e4f07d7-8a78-45c2-b467-9dc09498d18e",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "7a89c14a-799d-45e5-bbab-f2352cf90b9d",
                                    "name": "Get multisig account graph information",
                                    "request": {
                                        "name": "Get multisig account graph information",
                                        "description": {
                                            "content": "Returns the multisig account graph.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "multisig",
                                                "graph"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "582db219-db31-40cb-ad36-032d8d8b2287",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   }\n  ]\n },\n {\n  \"level\": 0,\n  \"multisigEntries\": [\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   },\n   {\n    \"multisig\": {\n     \"accountPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n     \"accountAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"minApproval\": 2,\n     \"minRemoval\": 1,\n     \"cosignatoryPublicKeys\": [\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\"\n     ],\n     \"multisigPublicKeys\": [\n      \"565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\"\n     ]\n    }\n   }\n  ]\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4a96947c-8992-4dfa-803a-824fd7b4299e",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "913855b9-cbcc-42fc-86bc-33fa4d16a48f",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "account",
                                                        ":accountId",
                                                        "multisig",
                                                        "graph"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "26041356-1aca-4644-8860-2442a0c34707",
                            "name": "Get namespaces created by an account",
                            "request": {
                                "name": "Get namespaces created by an account",
                                "description": {
                                    "content": "Gets an array of namespaces for a given account address.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "account",
                                        ":accountId",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "fbf857f7-8669-40ed-8a67-2922749a6990",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "bb80e0e3-8f38-4b70-8049-e6bf0f7f4b32",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "e0b18397-fcad-4ddf-bdd0-815cea0aa937",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "account",
                                                ":accountId",
                                                "namespaces"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c04ed361-09b9-45d5-a0e0-61a07268c9c8",
                    "name": "Get mosaics created for given array of addresses",
                    "request": {
                        "name": "Get mosaics created for given array of addresses",
                        "description": {
                            "content": "Gets mosaics created for a given array of addresses.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "mosaics"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "4648c845-9f47-4650-aa4a-4539c721d2e0",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaics\": [\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  },\n  {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "85fb545c-8554-4c4f-8e6d-76e798f855f2",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "01619eed-7796-4a21-9ef0-459e25cc5b5d",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "mosaics"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e6cdd0f7-ffe4-4efd-ad48-06c8dcb536f4",
                    "name": "Get namespaces for given array of addresses",
                    "request": {
                        "name": "Get namespaces for given array of addresses",
                        "description": {
                            "content": "Gets namespaces for a given array of addresses.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "namespaces"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "ecfa7a32-0d7e-4340-b1d9-4ad823033868",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"namespaces\": [\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  },\n  {\n   \"meta\": {\n    \"id\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"index\": \"<integer>\"\n   },\n   \"namespace\": {\n    \"registrationType\": 0,\n    \"depth\": 1,\n    \"level0\": \"85BBEA6CC462B244\",\n    \"alias\": {\n     \"type\": 0,\n     \"mosaicId\": \"0DC67FBE1CAD29E3\",\n     \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    },\n    \"parentId\": \"85BBEA6CC462B244\",\n    \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n    \"startHeight\": 1,\n    \"endHeight\": 1,\n    \"level1\": \"85BBEA6CC462B244\",\n    \"level2\": \"85BBEA6CC462B244\"\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cb14f7c6-bcd1-4b0e-9b89-eb840f4120c3",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f925dd08-1c90-4b35-ad85-b92bfc1f34a0",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "namespaces"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0adaef3a-3a9a-45f8-975f-a2f7f7f710cb",
                    "name": "Get readable names for a set of accountIds",
                    "request": {
                        "name": "Get readable names for a set of accountIds",
                        "description": {
                            "content": "Returns friendly names for accounts.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "account",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "ad94ff4e-3fe2-43e2-ab51-d6d8b7969930",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"accountNames\": [\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  },\n  {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"names\": [\n    \"alias1\",\n    \"alias2\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c551e4a7-7431-45a2-82b3-953ce28e780b",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ace14ed9-8604-4333-94fd-a6f4d97add35",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "account",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "bd097551-4b44-4270-8afb-46f68afa42af",
            "name": "block/{height}",
            "item": [
                {
                    "id": "d52ba8e6-178c-48e0-9d71-f0bc3664045f",
                    "name": "Get block information",
                    "request": {
                        "name": "Get block information",
                        "description": {
                            "content": "Gets a block from the chain that has the given height.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "b9e6f83a-9047-46fb-baed-8f10b76350fc",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"totalFee\": \"123456\",\n  \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHashSubCacheMerkleRoots\": [\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  ],\n  \"numTransactions\": 0,\n  \"numStatements\": 1\n },\n \"block\": {\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"height\": 1,\n  \"timestamp\": 108303181802,\n  \"difficulty\": 100000000000000,\n  \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"feeMultiplier\": 0\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e55be579-2032-46f9-8968-4930e7d1a346",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0cee26ce-a46a-49aa-9b64-663fad53fb76",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d58017c3-36cb-4a4d-8c2c-31ecfe19b4c7",
                    "name": "Get transactions from a block",
                    "request": {
                        "name": "Get transactions from a block",
                        "description": {
                            "content": "Returns an array of transactions included in a block for a given block height.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "transactions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "description": "Number of entries to return.",
                                    "key": "pageSize",
                                    "value": "10"
                                },
                                {
                                    "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                    "key": "id",
                                    "value": "<string>"
                                }
                            ],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "e039ef5a-4ba9-430d-a68b-d56753475b31",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8d63f949-2aaa-48a5-b671-9ba7e5555e13",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "189b7300-8b2a-4336-9976-5ccff2c226ac",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transactions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "key": "id",
                                            "value": "<string>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "096a35db-8330-4727-855c-8d9a925695a6",
                    "name": "Get the merkle path for a given a transaction and block",
                    "request": {
                        "name": "Get the merkle path for a given a transaction and block",
                        "description": {
                            "content": "Returns the merkle path for a transaction included in a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.transactionsHash) to verify if the transaction was included in the block.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "transaction",
                                ":hash",
                                "merkle"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                },
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a3540fff-f3c7-494b-9f4b-9aa91b912243",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dc6dfc74-3b9b-4ffc-b43b-04fea9768222",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dfde9ac6-2190-4612-af07-99b1ca8a9238",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "transaction",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "11757c8b-d501-4234-8527-ffa1ea1067bf",
                    "name": "Get receipts from a block",
                    "request": {
                        "name": "Get receipts from a block",
                        "description": {
                            "content": "Returns the receipts linked to a block.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipts"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "f2818485-7bba-42d2-92a3-630cb32ab700",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"transactionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 1,\n     \"secondaryId\": 0\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"source\": {\n     \"primaryId\": 1,\n     \"secondaryId\": 0\n    },\n    \"receipts\": [\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"version\": \"<integer>\",\n      \"type\": \"<integer>\",\n      \"mosaicId\": \"0DC67FBE1CAD29E3\",\n      \"amount\": \"123456\",\n      \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n      \"recipientAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ],\n \"addressResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ],\n \"mosaicResolutionStatements\": [\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  },\n  {\n   \"statement\": {\n    \"height\": 1,\n    \"unresolved\": \"85BBEA6CC462B244\",\n    \"resolutionEntries\": [\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     },\n     {\n      \"source\": {\n       \"primaryId\": 1,\n       \"secondaryId\": 0\n      },\n      \"resolved\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     }\n    ]\n   }\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f1cff54c-c12f-4e0a-a4c4-9492634be386",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9823fc81-e861-48a6-83e8-f0eef7a330d9",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipts"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "81bf795c-2f6c-43f4-ab45-f8bc1c73af82",
                    "name": "Get the merkle path for a given a receipt statement hash and block",
                    "request": {
                        "name": "Get the merkle path for a given a receipt statement hash and block",
                        "description": {
                            "content": "Returns the merkle path for a receipt statement or resolution linked to a block.\nThe merkle path is the minimum number of nodes needed to calculate the merkle root.\n\nSteps to calculate the merkle root:\n1. proofHash = hash (leaf).\n2. Concatenate proofHash with the first unprocessed item from the merklePath list as follows:\n* a) If item.position == left -> proofHash = sha_256(item.hash + proofHash).\n* b) If item.position == right -> proofHash = sha_256(proofHash+ item.hash).\n3. Repeat 2. for every item in the merklePath list.\n4. Compare if the calculated proofHash equals the one recorded in the\nblock header (block.receiptsHash) to verify if the statement was linked with the block.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "block",
                                ":height",
                                "receipt",
                                ":hash",
                                "merkle"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Block height.\n",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                                    },
                                    "key": "height"
                                },
                                {
                                    "description": "Receipt hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "c38ef5dd-34a2-46ac-b500-1b903a7aae31",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merklePath\": [\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  },\n  {\n   \"position\": \"<string>\",\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4c7271e9-9b7b-4386-b5e1-7c1cc4896683",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "da3de49b-8d73-46f6-a079-8cfb6465cde5",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "block",
                                        ":height",
                                        "receipt",
                                        ":hash",
                                        "merkle"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "height"
                                        },
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "d63dabec-2dfb-42c5-a44d-00a64d57053a",
            "name": "Get blocks information",
            "request": {
                "name": "Get blocks information",
                "description": {
                    "content": "Gets up to limit number of blocks after given block height.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "blocks",
                        ":height",
                        "limit",
                        ":limit"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                        {
                            "description": "Block height.\n",
                            "type": "any",
                            "value": {
                                "value": "reference #/components/schemas/Height not found in the OpenAPI spec"
                            },
                            "key": "height"
                        },
                        {
                            "description": "Number of elements to be returned.\nThe limit should be greater than or equal to \"db.pageSizeMin\" and not higher than \"db.pageSizeMax\".\nThe settings are adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "any",
                            "value": "<integer>",
                            "key": "limit"
                        }
                    ]
                },
                "method": "GET",
                "auth": {
                    "type": "noauth"
                }
            },
            "response": [
                {
                    "id": "70256dc3-efa0-4c1b-b793-c3261e2be035",
                    "name": "success",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "blocks",
                                ":height",
                                "limit",
                                ":limit"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "key": "height"
                                },
                                {
                                    "type": "any",
                                    "key": "limit"
                                }
                            ]
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "[\n {\n  \"meta\": {\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"totalFee\": \"123456\",\n   \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHashSubCacheMerkleRoots\": [\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n   ],\n   \"numTransactions\": 0,\n   \"numStatements\": 1\n  },\n  \"block\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"height\": 1,\n   \"timestamp\": 108303181802,\n   \"difficulty\": 100000000000000,\n   \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"feeMultiplier\": 0\n  }\n },\n {\n  \"meta\": {\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"totalFee\": \"123456\",\n   \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHashSubCacheMerkleRoots\": [\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n   ],\n   \"numTransactions\": 0,\n   \"numStatements\": 1\n  },\n  \"block\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"height\": 1,\n   \"timestamp\": 108303181802,\n   \"difficulty\": 100000000000000,\n   \"previousBlockHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"transactionsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"receiptsHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"stateHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"beneficiaryPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"feeMultiplier\": 0\n  }\n }\n]",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "8c7b64b0-6a4b-4e97-b872-a88ac036fc34",
                    "name": "InvalidArgument",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "blocks",
                                ":height",
                                "limit",
                                ":limit"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "type": "any",
                                    "key": "height"
                                },
                                {
                                    "type": "any",
                                    "key": "limit"
                                }
                            ]
                        },
                        "method": "GET",
                        "body": {}
                    },
                    "status": "Conflict",
                    "code": 409,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                }
            ],
            "event": []
        },
        {
            "id": "44d3c393-4f27-4f84-8b2e-ffb9de62723c",
            "name": "chain",
            "item": [
                {
                    "id": "424a29a2-a3e1-4505-a256-7e9210760ab6",
                    "name": "Get the current height of the chain",
                    "request": {
                        "name": "Get the current height of the chain",
                        "description": {
                            "content": "Returns the current height of the blockchain.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "height"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "73ad7b19-0e36-47a9-a252-b0e0e4cd062f",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "height"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5d56c1f1-dcff-4612-8a11-bee879ae1f33",
                    "name": "Get the current score of the chain",
                    "request": {
                        "name": "Get the current score of the chain",
                        "description": {
                            "content": "Gets the current score of the blockchain. The higher the score, the better the chain.\nDuring synchronization, nodes try to get the best blockchain in the network.\n\nThe score for a block is derived from its difficulty and the time (in seconds) that has elapsed since the last block:\n\n    block score = difficulty − time elapsed since last block\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "chain",
                                "score"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "a1286729-47d0-441e-ba1f-ecfa9af6375d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "chain",
                                        "score"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"scoreHigh\": 1683298087010368300,\n \"scoreLow\": 1683298087010368300\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "c443f4a2-94ed-45ba-b591-9c0654db7fe4",
            "name": "network",
            "item": [
                {
                    "id": "0fb7c321-1527-4eb7-99cd-4a624d45667a",
                    "name": "Get the current network type of the chain",
                    "request": {
                        "name": "Get the current network type of the chain",
                        "description": {
                            "content": "Returns the current network type.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "10f59073-265c-4940-a432-aedb4509f7da",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"name\": \"mijinTest\",\n \"description\": \"catapult development network\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "87de16b6-1694-4ac6-a3c1-ecdda770826d",
                    "name": "fees",
                    "item": [
                        {
                            "id": "1ef1a7eb-dc53-4d7f-be93-20008e116878",
                            "name": "Get rental fees information",
                            "request": {
                                "name": "Get rental fees information",
                                "description": {
                                    "content": "Returns the estimated effective rental fees for namespaces and mosaics.\nThis endpoint is only available if the REST instance has access to catapult-server ``resources/config-network.properties`` file.\nTo activate this feature, add the setting \"network.propertiesFilePath\" in the configuration file (rest/resources/rest.json).\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "rental"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "47a0330b-3e6f-4ead-ba89-30886d3aa848",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"effectiveRootNamespaceRentalFeePerBlock\": \"123456\",\n \"effectiveChildNamespaceRentalFee\": \"123456\",\n \"effectiveMosaicRentalFee\": \"123456\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "fa9d8b70-1197-4cb0-885e-7441de2c4116",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "rental"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "c30dc71d-f192-4559-821b-79cd2ec0fb5f",
                            "name": "Get transaction fees information",
                            "request": {
                                "name": "Get transaction fees information",
                                "description": {
                                    "content": "Returns the average, median, highest and lower fee multiplier over the last \"numBlocksTransactionFeeStats\".\nThe setting \"numBlocksTransactionFeeStats\" is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "network",
                                        "fees",
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "76efdb5b-a46a-4bf8-b1c3-db85e679550d",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "network",
                                                "fees",
                                                "transaction"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"averageFeeMultiplier\": 1,\n \"medianFeeMultiplier\": 1,\n \"highestFeeMultiplier\": 0,\n \"lowestFeeMultiplier\": 0\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e20b361e-235e-48e7-80f6-7bd9cf99c459",
                    "name": "Get the network properties",
                    "request": {
                        "name": "Get the network properties",
                        "description": {
                            "content": "Returns the content from a catapult-server network configuration file (resources/config-network.properties).\nTo enable this feature, the REST setting \"network.propertiesFilePath\" must define where the file is located.\nThis is adjustable via the configuration file (rest/resources/rest.json) per REST instance.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "network",
                                "properties"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "365a7529-d18f-4cd1-ab6c-98b674dd7402",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"network\": {\n  \"identifier\": \"mijin-test\",\n  \"nodeEqualityStrategy\": \"<string>\",\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"generationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"epochAdjustment\": \"1573430400s\"\n },\n \"chain\": {\n  \"enableVerifiableState\": true,\n  \"enableVerifiableReceipts\": true,\n  \"currencyMosaicId\": \"0x621E'C5B4'0385'6FC2\",\n  \"harvestingMosaicId\": \"0x4291'ED23'000A'037A\",\n  \"blockGenerationTargetTime\": \"15s\",\n  \"blockTimeSmoothingFactor\": \"3000\",\n  \"importanceGrouping\": \"39\",\n  \"importanceActivityPercentage\": \"5\",\n  \"maxRollbackBlocks\": \"40\",\n  \"maxDifficultyBlocks\": \"60\",\n  \"defaultDynamicFeeMultiplier\": \"10'000\",\n  \"maxTransactionLifetime\": \"24h\",\n  \"maxBlockFutureTime\": \"500ms\",\n  \"initialCurrencyAtomicUnits\": \"8'998'999'998'000'000\",\n  \"maxMosaicAtomicUnits\": \"9'000'000'000'000'000\",\n  \"totalChainImportance\": \"15'000'000\",\n  \"minHarvesterBalance\": \"500\",\n  \"maxHarvesterBalance\": \"4'000'000\",\n  \"harvestBeneficiaryPercentage\": \"10\",\n  \"blockPruneInterval\": \"360\",\n  \"maxTransactionsPerBlock\": \"200'000\"\n },\n \"plugins\": {\n  \"accountlink\": {\n   \"dummy\": \"<string>\"\n  },\n  \"aggregate\": {\n   \"maxTransactionsPerAggregate\": \"1'000\",\n   \"maxCosignaturesPerAggregate\": \"15\",\n   \"enableStrictCosignatureCheck\": false,\n   \"enableBondedAggregateSupport\": true,\n   \"maxBondedTransactionLifetime\": \"48h\"\n  },\n  \"lockhash\": {\n   \"lockedFundsPerAggregate\": \"10'000'000\",\n   \"maxHashLockDuration\": \"2d\"\n  },\n  \"locksecret\": {\n   \"maxSecretLockDuration\": \"30d\",\n   \"minProofSize\": \"1\",\n   \"maxProofSize\": \"1000\"\n  },\n  \"metadata\": {\n   \"maxValueSize\": \"1024\"\n  },\n  \"mosaic\": {\n   \"maxMosaicsPerAccount\": \"10'000\",\n   \"maxMosaicDuration\": \"3650d\",\n   \"maxMosaicDivisibility\": \"6\",\n   \"mosaicRentalFeeSinkPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"mosaicRentalFee\": \"500\"\n  },\n  \"multisig\": {\n   \"maxMultisigDepth\": \"3\",\n   \"maxCosignatoriesPerAccount\": \"10\",\n   \"maxCosignedAccountsPerAccount\": \"5\"\n  },\n  \"namespace\": {\n   \"maxNameSize\": \"64\",\n   \"maxChildNamespaces\": \"500\",\n   \"maxNamespaceDepth\": \"3\",\n   \"minNamespaceDuration\": \"1m\",\n   \"maxNamespaceDuration\": \"365d\",\n   \"namespaceGracePeriodDuration\": \"2m\",\n   \"reservedRootNamespaceNames\": \"xem, nem, user, account, org, com, biz, net, edu, mil, gov, info\",\n   \"namespaceRentalFeeSinkPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"rootNamespaceRentalFeePerBlock\": \"1\",\n   \"childNamespaceRentalFee\": \"100\"\n  },\n  \"restrictionaccount\": {\n   \"maxAccountRestrictionValues\": \"512\"\n  },\n  \"restrictionmosaic\": {\n   \"maxMosaicRestrictionValues\": \"20\"\n  },\n  \"transfer\": {\n   \"maxMessageSize\": \"1024\"\n  }\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "53fc61bf-b93f-4798-ab4e-ff6949c6c72e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "network",
                                        "properties"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "363828f9-2a53-4633-9d34-ca08da2d5476",
            "name": "node",
            "item": [
                {
                    "id": "4617ecdd-f1cc-4d72-9f32-83f02f627c21",
                    "name": "Get the node health information",
                    "request": {
                        "name": "Get the node health information",
                        "description": {
                            "content": "Supplies information regarding the connection and services status.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "health"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "49eb3b93-122b-4525-9979-8558ae4b9ea9",
                            "name": "Both API node and database services are reachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21d3e8fc-cd86-4503-b468-42c39f749c6d",
                            "name": "Either API node or database service is unavailable or unreachable from REST server.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "health"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Service Unavailable",
                            "code": 503,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": {\n  \"apiNode\": \"<string>\",\n  \"db\": \"<string>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "6f250e88-afc9-49aa-a9e0-6898543aa070",
                    "name": "Get the node information",
                    "request": {
                        "name": "Get the node information",
                        "description": {
                            "content": "Supplies additional information about the application running on a node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "info"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "af8a979e-a5c0-442a-b3eb-23d721dd254d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "info"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"version\": 0,\n \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n \"networkGenerationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"roles\": 2,\n \"port\": 7900,\n \"networkIdentifier\": 144,\n \"friendlyName\": \"api-node-0\",\n \"host\": \"127.0.0.1\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a7702a8e-3202-4bb4-8019-ee897ea0289a",
                    "name": "Get peers information",
                    "request": {
                        "name": "Get peers information",
                        "description": {
                            "content": "Gets the list of peers visible by the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "peers"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "85a51242-6f83-4237-a98b-262d66cbfc07",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "peers"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n },\n {\n  \"version\": 0,\n  \"publicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"networkGenerationHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"roles\": 2,\n  \"port\": 7900,\n  \"networkIdentifier\": 144,\n  \"friendlyName\": \"api-node-0\",\n  \"host\": \"127.0.0.1\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "cfd65771-f82d-4e82-90d3-b7b5e2cd5a79",
                    "name": "Get the storage information of the node",
                    "request": {
                        "name": "Get the storage information of the node",
                        "description": {
                            "content": "Returns storage information about the node.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "storage"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "5a253f9d-5b82-4acd-bce4-ef7957449878",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "storage"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"numBlocks\": 245053,\n \"numTransactions\": 58590,\n \"numAccounts\": 177\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "85355a0e-cdc4-4fa0-a738-1b30abaff865",
                    "name": "Get the node time",
                    "request": {
                        "name": "Get the node time",
                        "description": {
                            "content": "Gets the node time at the moment the reply was sent and received.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "time"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "ba46bb5f-c45d-448b-8501-6c36e1ad7d1b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "time"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"communicationTimestamps\": {\n  \"sendTimestamp\": 108303181802,\n  \"receiveTimestamp\": 108303181802\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "452c353b-ff79-4c50-8d01-112184049953",
                    "name": "Get the version of the running REST component",
                    "request": {
                        "name": "Get the version of the running REST component",
                        "description": {
                            "content": "Returns the version of the running catapult-rest component.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "node",
                                "server"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "dce1ac8b-769c-4969-a4c3-a4f6a7aca191",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "node",
                                        "server"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"serverInfo\": {\n  \"restVersion\": \"1.0.14\",\n  \"sdkVersion\": \"0.7.14\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "3bfc9e01-826e-416f-8a12-cced7317224c",
            "name": "transaction",
            "item": [
                {
                    "id": "5c0f0c59-aab6-4fdc-b7fc-c320a6e905d1",
                    "name": "Get transactions information",
                    "request": {
                        "name": "Get transactions information",
                        "description": {
                            "content": "Returns transactions information for a given array of transactionIds.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"transactionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "5e698993-3c82-4bbf-bb0e-6a24c04786f2",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n },\n {\n  \"meta\": {\n   \"height\": 1,\n   \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"index\": \"<integer>\",\n   \"id\": \"<string>\"\n  },\n  \"transaction\": {\n   \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n   \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"version\": \"<integer>\",\n   \"network\": 144,\n   \"type\": \"<integer>\",\n   \"maxFee\": \"123456\",\n   \"deadline\": 200,\n   \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"linkAction\": \"<integer>\"\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "13c59120-54dd-4e3b-85ec-ae055fcfd4b3",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b5dd16d6-b4aa-49d8-9b74-a107cb37e4e6",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "dcfdd8bb-14f1-4759-b5af-ba1ea41caf00",
                    "name": "Announce a new transaction",
                    "request": {
                        "name": "Announce a new transaction",
                        "description": {
                            "content": "Announces a transaction to the network.\nWe recommended to use the Symbol-SDKs to announce transactions because they should be serialized.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "fa31c874-db25-4cd3-af67-a2688585497e",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "27129663-0039-44f6-96bb-71f4e999d03d",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c1cf612e-c46b-4b63-96c0-44fbcb1b297f",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5914b1f3-4846-4e62-91a7-55309e607f89",
                    "name": "Get transaction information",
                    "request": {
                        "name": "Get transaction information",
                        "description": {
                            "content": "Returns transaction information given a transactionId or hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                ":transactionId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction identifier or hash.",
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "transactionId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "2021fe7f-7933-43e7-87f0-1a3a102c69a8",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"height\": 1,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"merkleComponentHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"index\": \"<integer>\",\n  \"id\": \"<string>\"\n },\n \"transaction\": {\n  \"signature\": \"4B408BBEDF25F2AC8E0E44A6E51E3CCBA03885902055F75EB9FF50433532CA44BF9175FDA7502EEE2FC1617126E453A2BD692BAFDAAF06BC8EDEBA7961B3730D\",\n  \"signerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"version\": \"<integer>\",\n  \"network\": 144,\n  \"type\": \"<integer>\",\n  \"maxFee\": \"123456\",\n  \"deadline\": 200,\n  \"remotePublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"linkAction\": \"<integer>\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "518c9987-80db-4664-957f-ac9faea76ff7",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6d4c25ed-3309-4079-8aa3-91877be87d4e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":transactionId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "transactionId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1e188ce5-112b-4c28-8776-2e15d42a7d8c",
                    "name": "Get transaction status",
                    "request": {
                        "name": "Get transaction status",
                        "description": {
                            "content": "Returns the transaction status for a given hash.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                ":hash",
                                "status"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Transaction hash.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/Hash256 not found in the OpenAPI spec"
                                    },
                                    "key": "hash"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "b0b3ba66-4459-46ee-b8cb-5780cad706fe",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"group\": \"<string>\",\n \"deadline\": 200,\n \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n \"code\": \"<string>\",\n \"height\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b62b79e0-61bf-485e-a342-36fe39030ce3",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a4594f6f-9890-4316-b8a5-2eafb1a78c85",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        ":hash",
                                        "status"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "hash"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d831ad79-9327-4dd6-8bed-813cff986791",
                    "name": "Get transactions status",
                    "request": {
                        "name": "Get transactions status",
                        "description": {
                            "content": "Returns an array of transaction statuses for a given array of transaction hashes.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "statuses"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"hashes\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "dd87e574-1761-47d9-be31-66eb0ae6dd79",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n },\n {\n  \"group\": \"<string>\",\n  \"deadline\": 200,\n  \"hash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"code\": \"<string>\",\n  \"height\": 1\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0fc22a6e-4b6e-4b87-96f1-1b0cba8e29cb",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f7172a15-f976-4684-a787-2c159beb191e",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "statuses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "f972939c-0b63-443a-88d9-0f73ea849bf3",
                    "name": "Announce an aggregate bonded transaction",
                    "request": {
                        "name": "Announce an aggregate bonded transaction",
                        "description": {
                            "content": "Announces an aggregate bonded transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "partial"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"payload\": \"<string>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "64a8ee3d-7b5f-4dfe-97b6-b1ae2dd5dd19",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ea3550fb-fb57-4d7e-aa93-c028e8c4da73",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4e56eaf1-8c81-41d5-87c4-4d71c0270991",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "partial"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "058f4432-80fc-40fe-839c-297cd71f2a14",
                    "name": "Announce a cosignature transaction",
                    "request": {
                        "name": "Announce a cosignature transaction",
                        "description": {
                            "content": "Announces a cosignature transaction to the network.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "transaction",
                                "cosignature"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"parentHash\": \"<hex>\",\n    \"signature\": \"<string>\",\n    \"signerPublicKey\": \"<hex>\"\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "093ab4a3-ff25-46fd-82f8-bb3399f8bcd7",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Accepted",
                            "code": 202,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6b5717a0-e0ee-46ae-aace-ad68a9ce0dea",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "48b303d3-0ae7-46d7-928d-22f87aae909a",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "transaction",
                                        "cosignature"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "cadb94ab-f14c-425f-bcc6-2e5000f1b449",
            "name": "metadata",
            "item": [
                {
                    "id": "9722b0ab-3b33-4a0b-8299-bed37c275bcc",
                    "name": "account/{account Id}",
                    "item": [
                        {
                            "id": "d2a180e6-87b3-4145-b369-ca46d0dc1a5b",
                            "name": "Get account metadata",
                            "request": {
                                "name": "Get account metadata",
                                "description": {
                                    "content": "Returns the account metadata given an account id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "a332b689-caf0-40b9-8f3c-ddc6f46d6667",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "eb3f3e8d-f8ed-467c-90e8-c5ca8b3f2590",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "3af1d82b-d8fc-4bb3-8ff4-1a5da074b7b8",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "37149910-b5a9-4beb-a1ff-adf4ea32bfb5",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "f7579f52-77a8-4aaf-9063-2ac549307291",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "2fcacdd9-2b8e-423d-8098-c39a063a237b",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "8af1bc81-2f6f-433a-8045-514a3139a183",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "c3f3f353-e573-4662-8d58-6fd3ba802e54",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "3fc4f918-7134-4df0-9919-3fa72bd85cc8",
                                    "name": "Get account metadata",
                                    "request": {
                                        "name": "Get account metadata",
                                        "description": {
                                            "content": "Returns the account metadata given an account id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "account",
                                                ":accountId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "603ae9ef-26e8-4d01-9bd4-8f24dab2b5a0",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "7da702e6-b7e5-4ecf-8f5d-d63720d01826",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "dbae70d9-0969-4d08-98c0-0509709d4129",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "account",
                                                        ":accountId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "94025fb8-6f19-414a-9d82-4d2db13e3150",
                    "name": "mosaic/{mosaic Id}",
                    "item": [
                        {
                            "id": "09a755cf-c9bf-490c-9b8d-111db8f63f09",
                            "name": "Get mosaic metadata",
                            "request": {
                                "name": "Get mosaic metadata",
                                "description": {
                                    "content": "Returns the mosaic metadata given a mosaic id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Mosaic identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                            },
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "824fe2ca-5482-425a-a829-729fd4298293",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "42fa2bcf-c2fd-4ab2-801a-428873cafbdc",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "48e40f83-300d-4f1d-bbea-a98ca70b8f07",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "8ac18ed7-6546-446f-a426-6dc03e4f46bf",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "a73052a2-0115-4f1d-9084-4beb2e02e22e",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "1e365637-c2f1-4867-b8fe-c2a79b832319",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "506e1dda-d0f0-456e-93be-5ad9ec5f4531",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "2a45379a-4216-41af-bd31-07162de8ddde",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "1d958ff1-c1f7-4827-8912-91a4a03057b7",
                                    "name": "Get mosaic metadata",
                                    "request": {
                                        "name": "Get mosaic metadata",
                                        "description": {
                                            "content": "Returns the mosaic metadata given a mosaic id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "mosaic",
                                                ":mosaicId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "e49a7851-f9cf-4387-b337-4bb91358bd63",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "41862abb-690c-43ec-9dce-2246dc303f4b",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b506d99e-158b-4e0d-8f37-1146e825fbe5",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c9c59ddd-a336-4154-87e2-6a5160080b12",
                    "name": "namespace/{namespace Id}",
                    "item": [
                        {
                            "id": "620acafc-6551-4a3f-821c-423f97f61604",
                            "name": "Get namespace metadata",
                            "request": {
                                "name": "Get namespace metadata",
                                "description": {
                                    "content": "Returns the namespace metadata given a namespace id.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "metadata",
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "description": "Number of entries to return.",
                                            "key": "pageSize",
                                            "value": "10"
                                        },
                                        {
                                            "description": "Entry id at which to start pagination.\nIf the ordering parameter is set to -id, the elements returned precede the identifier.\nOtherwise, newer elements with respect to the id are returned.\n",
                                            "key": "id",
                                            "value": "<string>"
                                        },
                                        {
                                            "description": "Ordering criteria:\n* -id - Descending order by id.\n* id - Ascending order by id.\n",
                                            "key": "ordering",
                                            "value": "-id"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "description": "Namespace identifier.",
                                            "type": "any",
                                            "value": {
                                                "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                            },
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "44091a15-3f36-4016-a1f1-87b6c8eeff15",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "52ee604b-7755-4874-abff-314087e440be",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "82753123-798e-4a15-954a-eb7569177bb2",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [
                                                {
                                                    "key": "pageSize",
                                                    "value": "10"
                                                },
                                                {
                                                    "key": "id",
                                                    "value": "<string>"
                                                },
                                                {
                                                    "key": "ordering",
                                                    "value": "-id"
                                                }
                                            ],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "namespaceId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "914074dc-6807-4239-947f-26fa48b472d3",
                            "name": "key/{key}",
                            "item": [
                                {
                                    "id": "4553baf7-7cdb-4061-b554-59a82736d720",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id and a key.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "c5444b81-3271-49eb-9054-b1a7fb026106",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"metadataEntries\": [\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  },\n  {\n   \"id\": \"<string>\",\n   \"metadataEntry\": {\n    \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n    \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n    \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n    \"metadataType\": \"<integer>\",\n    \"value\": \"<hex>\",\n    \"targetId\": \"0DC67FBE1CAD29E3\"\n   }\n  }\n ]\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d39bb3aa-301c-4520-99d9-aecc612cf1c0",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d7115740-b51b-4741-95e5-50a28f99f54a",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "253b648d-bb0e-435e-8a5e-7ec4efafc6d6",
                                    "name": "Get namespace metadata",
                                    "request": {
                                        "name": "Get namespace metadata",
                                        "description": {
                                            "content": "Returns the namespace metadata given a namespace id, a key, and a sender.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "metadata",
                                                "namespace",
                                                ":namespaceId",
                                                "key",
                                                ":key",
                                                "sender",
                                                ":publicKey"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Namespace identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                                    },
                                                    "key": "namespaceId"
                                                },
                                                {
                                                    "description": "Metadata key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MetadataKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "key"
                                                },
                                                {
                                                    "description": "Account public key.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/PublicKey not found in the OpenAPI spec"
                                                    },
                                                    "key": "publicKey"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "30e29f1b-5a55-4825-bbc1-880cb82e5b7d",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"id\": \"<string>\",\n \"metadataEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"senderPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"targetPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"scopedMetadataKey\": \"0DC67FBE1CAD29E3\",\n  \"metadataType\": \"<integer>\",\n  \"value\": \"<hex>\",\n  \"targetId\": \"0DC67FBE1CAD29E3\"\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "5f5e93f1-d6bf-41da-9f2a-c47cce2633d9",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "66cc30ab-9969-4e05-adfd-2f134ecb0ca1",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "metadata",
                                                        "namespace",
                                                        ":namespaceId",
                                                        "key",
                                                        ":key",
                                                        "sender",
                                                        ":publicKey"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "namespaceId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "key"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "publicKey"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "13e0fee6-f282-4886-a1a6-c955c10c6ca1",
            "name": "mosaic",
            "item": [
                {
                    "id": "c689810f-d69c-4b03-beea-559b75075d89",
                    "name": "Get mosaics information for an array of mosaics",
                    "request": {
                        "name": "Get mosaics information for an array of mosaics",
                        "description": {
                            "content": "Gets an array of mosaic definition.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "dc33c1c3-111e-4b8f-a65c-60fd9f9ee046",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n },\n {\n  \"mosaic\": {\n   \"id\": \"0DC67FBE1CAD29E3\",\n   \"supply\": \"123456\",\n   \"startHeight\": 1,\n   \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n   \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"revision\": 1,\n   \"flags\": \"<integer>\",\n   \"divisibility\": \"<integer>\",\n   \"duration\": 200\n  }\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ad428e94-8222-4b2c-bbaf-c29c6ad968e3",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "be0588ec-eed4-47f3-a1d6-fa1ba1e1ad79",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "40950428-fae6-4c52-a89b-ed798d9d4f4e",
                    "name": "Get mosaic information",
                    "request": {
                        "name": "Get mosaic information",
                        "description": {
                            "content": "Gets the mosaic definition for a given mosaic identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic",
                                ":mosaicId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Mosaic identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                    },
                                    "key": "mosaicId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "e80e4284-5e80-44ff-abfb-e2e107f3fa1b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaic\": {\n  \"id\": \"0DC67FBE1CAD29E3\",\n  \"supply\": \"123456\",\n  \"startHeight\": 1,\n  \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"revision\": 1,\n  \"flags\": \"<integer>\",\n  \"divisibility\": \"<integer>\",\n  \"duration\": 200\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0bba3ad3-bd9c-46c8-bd49-99c5d962ec19",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c14fafc0-ee7b-406f-af97-ae26ff456fbe",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        ":mosaicId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "mosaicId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "da20759a-3f64-4ac3-803f-eff02e04741f",
                    "name": "Get readable names for a set of mosaics",
                    "request": {
                        "name": "Get readable names for a set of mosaics",
                        "description": {
                            "content": "Returns friendly names for mosaics.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "mosaic",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "00ebeece-e4a3-4fae-89eb-0642e469f78b",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"mosaicNames\": [\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  },\n  {\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"names\": [\n    \"symbol.xym\"\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "252a5c13-32f8-4dfe-bd20-2fb9d10fb720",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d78aa936-7b8a-445c-a707-fe755e301194",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "mosaic",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "63d2495a-82fb-4892-98a1-43b34e831c4e",
            "name": "namespace",
            "item": [
                {
                    "id": "38ce8ced-6054-459c-97cc-13d5af3e720f",
                    "name": "Get namespace information",
                    "request": {
                        "name": "Get namespace information",
                        "description": {
                            "content": "Gets the namespace for a given namespace identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                ":namespaceId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "description": "Namespace identifier.",
                                    "type": "any",
                                    "value": {
                                        "value": "reference #/components/schemas/NamespaceId not found in the OpenAPI spec"
                                    },
                                    "key": "namespaceId"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "id": "3877cdb7-8004-4894-a8cc-bfc39a029b1d",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"meta\": {\n  \"id\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"index\": \"<integer>\"\n },\n \"namespace\": {\n  \"registrationType\": 0,\n  \"depth\": 1,\n  \"level0\": \"85BBEA6CC462B244\",\n  \"alias\": {\n   \"type\": 0,\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n  },\n  \"parentId\": \"85BBEA6CC462B244\",\n  \"ownerPublicKey\": \"AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\",\n  \"ownerAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"startHeight\": 1,\n  \"endHeight\": 1,\n  \"level1\": \"85BBEA6CC462B244\",\n  \"level2\": \"85BBEA6CC462B244\"\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e1c21b14-a131-40b1-9602-3f8051583920",
                            "name": "ResourceNotFound",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "33e3dd43-bf4f-44f8-ad66-346289fbcbae",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        ":namespaceId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "type": "any",
                                            "key": "namespaceId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5dba9352-c6b7-40d6-bb84-00cb70c18b5c",
                    "name": "Get readable names for a set of namespaces",
                    "request": {
                        "name": "Get readable names for a set of namespaces",
                        "description": {
                            "content": "Returns friendly names for namespaces.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "namespace",
                                "names"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "noauth"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"namespaceIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                        }
                    },
                    "response": [
                        {
                            "id": "36d4b2c9-36cb-4ff5-82df-183e57ad7616",
                            "name": "success",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n },\n {\n  \"id\": \"85BBEA6CC462B244\",\n  \"name\": \"cat\",\n  \"parentId\": \"85BBEA6CC462B244\"\n }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4fc7d271-4579-4a9d-9bec-87ef41e420e1",
                            "name": "InvalidContent",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "da71be4e-2fab-4039-b2d3-70c9e8102ee2",
                            "name": "InvalidArgument",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "namespace",
                                        "names"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Conflict",
                            "code": 409,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "e04f2513-652f-407c-b37e-ce44ff586fff",
            "name": "restrictions",
            "item": [
                {
                    "id": "6425a5ae-973c-4833-99c3-ea271cb13481",
                    "name": "account",
                    "item": [
                        {
                            "id": "c9b0344a-1611-483e-b73e-28211da3944d",
                            "name": "Get account restrictions for given array of addresses",
                            "request": {
                                "name": "Get account restrictions for given array of addresses",
                                "description": {
                                    "content": "Returns the account restrictions for a given array of addresses.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "da6d869e-204a-439f-b443-a8528219b4c0",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    }\n   ]\n  }\n },\n {\n  \"accountRestrictions\": {\n   \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    },\n    {\n     \"restrictionFlags\": 1,\n     \"values\": [\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n      \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n     ]\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "53e0d60a-432b-427e-9c76-582cd1d6e510",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "22d8bfc0-de9f-4c99-ab82-825f1435bcfa",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "f9880540-e38b-413a-8dc5-5735eba0824a",
                            "name": "Get the account restrictions",
                            "request": {
                                "name": "Get the account restrictions",
                                "description": {
                                    "content": "Returns the account restrictions for a given account.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "account",
                                        ":accountId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "description": "Account public key or address enconded using a 32-character set.",
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "accountId"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "auth": {
                                    "type": "noauth"
                                }
                            },
                            "response": [
                                {
                                    "id": "7e12418e-9c63-4f68-b7af-0febc40e21d1",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"accountRestrictions\": {\n  \"address\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"restrictions\": [\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    ]\n   },\n   {\n    \"restrictionFlags\": 1,\n    \"values\": [\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n     \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\"\n    ]\n   }\n  ]\n }\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "23b1c429-64d6-4c76-aa63-1c5269b43c59",
                                    "name": "ResourceNotFound",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Not Found",
                                    "code": 404,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "8d0dc5da-1140-4972-a00d-f63263f3200c",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "account",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "type": "any",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                },
                {
                    "id": "bf800010-d7aa-4c82-a324-ab3160d5798f",
                    "name": "mosaic",
                    "item": [
                        {
                            "id": "db0f55a6-cdfe-4dc2-b341-83dcd8137440",
                            "name": "Get mosaic global restrictions for an array of mosaics.",
                            "request": {
                                "name": "Get mosaic global restrictions for an array of mosaics.",
                                "description": {
                                    "content": "Get mosaic global restrictions.",
                                    "type": "text/plain"
                                },
                                "url": {
                                    "path": [
                                        "restrictions",
                                        "mosaic"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "method": "POST",
                                "auth": {
                                    "type": "noauth"
                                },
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"mosaicIds\": [\n        \"<hex>\",\n        \"<hex>\"\n    ]\n}"
                                }
                            },
                            "response": [
                                {
                                    "id": "7ed46c0c-4f7a-48fb-afdf-c3035bf33f65",
                                    "name": "success",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"restriction\": {\n      \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n      \"restrictionValue\": 1000,\n      \"restrictionType\": \"<integer>\"\n     }\n    }\n   ]\n  }\n }\n]",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "796610c4-36e9-4900-b46b-8a9e9d50a9d9",
                                    "name": "InvalidContent",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Bad Request",
                                    "code": 400,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                },
                                {
                                    "id": "91968ee9-429b-4174-ab41-8fc6658b6384",
                                    "name": "InvalidArgument",
                                    "originalRequest": {
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": []
                                        },
                                        "method": "POST",
                                        "body": {}
                                    },
                                    "status": "Conflict",
                                    "code": 409,
                                    "header": [
                                        {
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                    "cookie": [],
                                    "_postman_previewlanguage": "json"
                                }
                            ],
                            "event": []
                        },
                        {
                            "id": "29452e94-4656-4dfc-9f51-48b28eb1e6bc",
                            "name": "{mosaic Id}",
                            "item": [
                                {
                                    "id": "6dde18a5-3022-42e7-a6d6-00c1db091182",
                                    "name": "Get mosaic global restriction for a given mosaic identifier.",
                                    "request": {
                                        "name": "Get mosaic global restriction for a given mosaic identifier.",
                                        "description": {
                                            "content": "Get mosaic global restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "50e37806-3160-40f2-b017-7f119dbeb883",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"restriction\": {\n     \"referenceMosaicId\": \"0DC67FBE1CAD29E3\",\n     \"restrictionValue\": 1000,\n     \"restrictionType\": \"<integer>\"\n    }\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "db46b0fb-2fa1-408d-aa56-f58cd5b15529",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "6f2826a8-4add-4dfb-bde6-faca11e26d63",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "ceeba6f9-00f0-429f-9bca-f2d41d89a430",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifiers array.",
                                        "description": {
                                            "content": "Get mosaic address restrictions.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                }
                                            ]
                                        },
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "method": "POST",
                                        "auth": {
                                            "type": "noauth"
                                        },
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n    \"publicKeys\": [\n        \"<hex>\",\n        \"<hex>\"\n    ],\n    \"addresses\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "71cb4dcb-4ee8-4808-a2bd-9af4671deb12",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "[\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n },\n {\n  \"mosaicRestrictionEntry\": {\n   \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n   \"entryType\": \"<integer>\",\n   \"mosaicId\": \"0DC67FBE1CAD29E3\",\n   \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n   \"restrictions\": [\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    },\n    {\n     \"key\": \"0DC67FBE1CAD29E3\",\n     \"value\": \"<string>\"\n    }\n   ]\n  }\n }\n]",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "ea9fc040-142f-4e8e-b377-921b8719463d",
                                            "name": "InvalidContent",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Bad Request",
                                            "code": 400,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "4f572ade-f017-44e6-8f58-c8290c171563",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        }
                                                    ]
                                                },
                                                "method": "POST",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                },
                                {
                                    "id": "3452d41b-3dfb-4f92-9c86-4577b87c8067",
                                    "name": "Get mosaic address restrictions for a given mosaic and account identifier.",
                                    "request": {
                                        "name": "Get mosaic address restrictions for a given mosaic and account identifier.",
                                        "description": {
                                            "content": "Get mosaic address restriction.",
                                            "type": "text/plain"
                                        },
                                        "url": {
                                            "path": [
                                                "restrictions",
                                                "mosaic",
                                                ":mosaicId",
                                                "address",
                                                ":accountId"
                                            ],
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "query": [],
                                            "variable": [
                                                {
                                                    "description": "Mosaic identifier.",
                                                    "type": "any",
                                                    "value": {
                                                        "value": "reference #/components/schemas/MosaicId not found in the OpenAPI spec"
                                                    },
                                                    "key": "mosaicId"
                                                },
                                                {
                                                    "description": "Account public key or address enconded using a 32-character set.",
                                                    "type": "any",
                                                    "value": "<string>",
                                                    "key": "accountId"
                                                }
                                            ]
                                        },
                                        "method": "GET",
                                        "auth": {
                                            "type": "noauth"
                                        }
                                    },
                                    "response": [
                                        {
                                            "id": "82af62da-5caa-4d1f-a334-c69750fd838e",
                                            "name": "success",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "OK",
                                            "code": 200,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"mosaicRestrictionEntry\": {\n  \"compositeHash\": \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\",\n  \"entryType\": \"<integer>\",\n  \"mosaicId\": \"0DC67FBE1CAD29E3\",\n  \"targetAddress\": \"9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\",\n  \"restrictions\": [\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   },\n   {\n    \"key\": \"0DC67FBE1CAD29E3\",\n    \"value\": \"<string>\"\n   }\n  ]\n }\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "b751c956-ba48-480f-b802-4ca3886ab569",
                                            "name": "ResourceNotFound",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Not Found",
                                            "code": 404,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        },
                                        {
                                            "id": "d970ba57-509e-4941-9eb3-5467026e9849",
                                            "name": "InvalidArgument",
                                            "originalRequest": {
                                                "url": {
                                                    "path": [
                                                        "restrictions",
                                                        "mosaic",
                                                        ":mosaicId",
                                                        "address",
                                                        ":accountId"
                                                    ],
                                                    "host": [
                                                        "{{baseUrl}}"
                                                    ],
                                                    "query": [],
                                                    "variable": [
                                                        {
                                                            "type": "any",
                                                            "key": "mosaicId"
                                                        },
                                                        {
                                                            "type": "any",
                                                            "key": "accountId"
                                                        }
                                                    ]
                                                },
                                                "method": "GET",
                                                "body": {}
                                            },
                                            "status": "Conflict",
                                            "code": 409,
                                            "header": [
                                                {
                                                    "key": "Content-Type",
                                                    "value": "application/json"
                                                }
                                            ],
                                            "body": "{\n \"code\": \"<string>\",\n \"message\": \"<string>\"\n}",
                                            "cookie": [],
                                            "_postman_previewlanguage": "json"
                                        }
                                    ],
                                    "event": []
                                }
                            ],
                            "event": []
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "id": "baseUrl",
            "type": "string",
            "value": "http://localhost:3000"
        }
    ],
    "info": {
        "_postman_id": "e69d53a9-12c4-4c35-b5c4-8b013054ee36",
        "name": "Catapult REST Endpoints",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "OpenAPI Specification of catapult-rest 1.0.20.22",
            "type": "text/plain"
        }
    }
}